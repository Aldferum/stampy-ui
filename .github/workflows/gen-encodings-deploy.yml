name: Generate Encodings & Deploy
on:
  workflow_dispatch:
env:
  filepath: public/assets
  filename: stampy-questions-encodings.json
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
jobs:
  gen-encodings-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Clone stampy-ui repository code
        uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Generate questions & encodings
        id: generate
        run: |
          npm install node-fetch @tensorflow/tfjs-node @tensorflow-models/universal-sentence-encoder
          node questions-encodings.mjs
          OUTPUT=$(git diff --name-only | tail -1)
          echo "::set-output name=gitdiff::$OUTPUT"
      - name: Check for changes
        id: check
        run: |
          echo "git diff --name-only | tail -1 >>> ${{ steps.generate.outputs.gitdiff }}"
          echo "encodings changed = ${{ contains( steps.generate.outputs.gitdiff, env.filename ) }}"
          echo "::set-output name=changed::${{ contains( steps.generate.outputs.gitdiff, env.filename ) }}"
      - name: Commit files
        if: steps.check.outputs.changed == 'true'
        run: |
          git config --local user.name ${{ github.actor }}
          git stage ${{ env.filepath }}/${{ env.filename }}
          git commit -m "Generate updated ${{ env.filename }}"
      - name: Push updated files on GitHub
        if: steps.check.outputs.changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_GEN_EMBEDDINGS }}
          force: true
      - name: Restore stampy-ui repository code
        if: github.event.pull_request.merged == 'true' || steps.check.outputs.changed == 'true'
        uses: actions/checkout@v3
      - name: Deploy to Cloudflare
        if: github.event.pull_request.merged == 'true' || steps.check.outputs.changed == 'true'
        run: |
          cat wrangler.toml.template | sed s/{CLOUDFLARE_ACCT_ID}/${{ secrets.CLOUDFLARE_ACCT_ID }}/ | sed s/{STAMPY_KV_ID}/${{ secrets.STAMPY_KV_ID }}/ > wrangler.toml
          npm install
          npm run deploy
